name: Deploy Lambda For DCinside

on:
  push:
    branches:
      - main
    paths:
      - 'extract/dcinside/**'
  workflow_dispatch:

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # GitHub OIDC 사용을 위한 설정
      contents: read

    env:
      TARGET_DIR: "extract/dcinside"
      DEPLOY_LAMBDA_NAME: "vroomcast-lambda-extract-dc"
      DEPLOY_IMAGE_NAME: "extract-dc"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: Configure AWS Credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 | \
        docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

    - name: Build & Push Deploy Lambda Image
      run: |
        IMAGE_URI="${{ secrets.AWS_ECR_REGISTRY }}/vroomcast/$DEPLOY_IMAGE_NAME:latest"

        echo "Building & Deploying Deploy Lambda: $DEPLOY_IMAGE_NAME"
        docker build --no-cache -t vroomcast/$DEPLOY_IMAGE_NAME $TARGET_DIR
        docker tag vroomcast/$DEPLOY_IMAGE_NAME:latest $IMAGE_URI
        docker push $IMAGE_URI
        
        echo "Check latest image has same digest with expected one"
        LOCAL_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_URI | cut -d '@' -f 2)
        for i in {1..10}; do
          ECR_DIGEST=$(aws ecr batch-get-image --repository-name vroomcast/$DEPLOY_IMAGE_NAME --image-ids imageTag=latest --query 'images[0].imageId.imageDigest' --output text)
          sleep 3
          if [ "$ECR_DIGEST" == "$LOCAL_DIGEST" ]; then
            echo "Image successfully pushed and verified in ECR!"
            break
          fi
          echo "ECR image not updated yet. Retrying in 3 seconds..."
        done
        
        if [ "$ECR_DIGEST" != "$LOCAL_DIGEST" ]; then
          echo "ECR image digest does not match local digest! Exiting..."
          exit 1
        fi

        echo "Creating or Updating Deploy Lambda: $DEPLOY_LAMBDA_NAME"
        aws lambda create-function \
          --function-name $DEPLOY_LAMBDA_NAME \
          --package-type Image \
          --code ImageUri=$IMAGE_URI \
          --role ${{ secrets.AWS_LAMBDA_EXECUTION_ROLE }} \
          --timeout 300 \
          --memory-size 2048 \
          --region ap-northeast-2 || \
        aws lambda update-function-code \
          --function-name $DEPLOY_LAMBDA_NAME \
          --image-uri $IMAGE_URI \
          --region ap-northeast-2

    - name: Wait for Lambda to be Active
      run: |
        sleep 5
        while [[ "$(aws lambda get-function-configuration --function-name "$DEPLOY_LAMBDA_NAME" --query 'State' --output text)" == "Pending" ]]; do
          echo "Lambda is still pending... waiting 3 seconds"
          sleep 3
        done
        sleep 5
        echo "Lambda is ready!"
